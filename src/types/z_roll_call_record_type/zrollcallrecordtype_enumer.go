// Code generated by "enumer -type=ZRollCallRecordType -transform=title-lower"; DO NOT EDIT.

package z_roll_call_record_type

import (
	"fmt"
	"strings"
)

const _ZRollCallRecordTypeName = "nonArrivallatepunctualleaveunknown"

var _ZRollCallRecordTypeIndex = [...]uint8{0, 10, 14, 22, 27, 34}

const _ZRollCallRecordTypeLowerName = "nonarrivallatepunctualleaveunknown"

func (i ZRollCallRecordType) String() string {
	if i < 0 || i >= ZRollCallRecordType(len(_ZRollCallRecordTypeIndex)-1) {
		return fmt.Sprintf("ZRollCallRecordType(%d)", i)
	}
	return _ZRollCallRecordTypeName[_ZRollCallRecordTypeIndex[i]:_ZRollCallRecordTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ZRollCallRecordTypeNoOp() {
	var x [1]struct{}
	_ = x[NonArrival-(0)]
	_ = x[Late-(1)]
	_ = x[Punctual-(2)]
	_ = x[Leave-(3)]
	_ = x[Unknown-(4)]
}

var _ZRollCallRecordTypeValues = []ZRollCallRecordType{NonArrival, Late, Punctual, Leave, Unknown}

var _ZRollCallRecordTypeNameToValueMap = map[string]ZRollCallRecordType{
	_ZRollCallRecordTypeName[0:10]:       NonArrival,
	_ZRollCallRecordTypeLowerName[0:10]:  NonArrival,
	_ZRollCallRecordTypeName[10:14]:      Late,
	_ZRollCallRecordTypeLowerName[10:14]: Late,
	_ZRollCallRecordTypeName[14:22]:      Punctual,
	_ZRollCallRecordTypeLowerName[14:22]: Punctual,
	_ZRollCallRecordTypeName[22:27]:      Leave,
	_ZRollCallRecordTypeLowerName[22:27]: Leave,
	_ZRollCallRecordTypeName[27:34]:      Unknown,
	_ZRollCallRecordTypeLowerName[27:34]: Unknown,
}

var _ZRollCallRecordTypeNames = []string{
	_ZRollCallRecordTypeName[0:10],
	_ZRollCallRecordTypeName[10:14],
	_ZRollCallRecordTypeName[14:22],
	_ZRollCallRecordTypeName[22:27],
	_ZRollCallRecordTypeName[27:34],
}

// ZRollCallRecordTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ZRollCallRecordTypeString(s string) (ZRollCallRecordType, error) {
	if val, ok := _ZRollCallRecordTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ZRollCallRecordTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ZRollCallRecordType values", s)
}

// ZRollCallRecordTypeValues returns all values of the enum
func ZRollCallRecordTypeValues() []ZRollCallRecordType {
	return _ZRollCallRecordTypeValues
}

// ZRollCallRecordTypeStrings returns a slice of all String values of the enum
func ZRollCallRecordTypeStrings() []string {
	strs := make([]string, len(_ZRollCallRecordTypeNames))
	copy(strs, _ZRollCallRecordTypeNames)
	return strs
}

// IsAZRollCallRecordType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ZRollCallRecordType) IsAZRollCallRecordType() bool {
	for _, v := range _ZRollCallRecordTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
